<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
	<channel>
		<title>LitJSON</title>
		<link>https://litjson.net/</link>
		<description />
		<copyright>2018</copyright>
		<pubDate>Fri, 05 Jan 2018 07:37:16 GMT</pubDate>
		<lastBuildDate>Fri, 05 Jan 2018 07:37:16 GMT</lastBuildDate>
		<item>
			<title>LitJSON v0.10.0 released</title>
			<link>https://litjson.net/blog/2018/01/litjson-v0.10.0-released</link>
			<description>&lt;p&gt;Version v0.10.0 of LitJSON has been released.&lt;/p&gt;</description>
			<author>devlead</author>
			<guid>https://litjson.net/blog/2018/01/litjson-v0.10.0-released</guid>
			<pubDate>Thu, 04 Jan 2018 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Version v0.10.0 of LitJSON has been released.&lt;/p&gt;
&lt;p&gt;This is the first release under the new LitJSON organization, it includes a few new major improvements and a couple of bug fixes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;LitJSON has now been ported to .NET Core, which means it's now targets&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.NET Standard 2.0&lt;/li&gt;
&lt;li&gt;.NET Standard 1.5&lt;/li&gt;
&lt;li&gt;.NET Framework 4.5&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Which makes it available to most of the .NET runtimes out there, please raise an issue/pullrequest if you are missing any target.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://litjson.net/api/LitJson/JsonWriter"&gt;JsonWriter&lt;/a&gt; now has the &lt;a href="https://litjson.net/api/LitJson/JsonWriter/B6391FAB"&gt;LowerCaseProperties&lt;/a&gt; property which forces all properties to be outputted in lowercase.&lt;/p&gt;
&lt;p&gt;The code base is now compatible and compilable under SQLCLR, which makes it an option for handling JSON with your CLR procedures and functions in SQL Server 2012 and up.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bugfixes&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Long/Int64 are now handled more robustly and can be upcast from an int.&lt;/p&gt;
&lt;p&gt;Numbers are now handled in a culture invariant way, which means things will work the same regardless of culture on the clients maachine.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This release's contributors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/devlead"&gt;devlead&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ikasoumen4"&gt;ikasoumen4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zhenlinyang"&gt;zhenlinyang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A big thanks to all LitJSON contributors and users, it wouldn't have been possible without you!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Housekeeping&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There's been plenty of yak shaving before this release, to improve quality and simplify contribution to the project.&lt;/p&gt;
&lt;p&gt;The project is now compiling multitargeted using .NET Core CLI, unit tests have migrated to work with newer versions of NUnit and the .NET CLI. This aslo means there's now an MSBuild solution and project files, so you can open and compile the project in Visual Studio, Visual Studio for Mac, VSCode and Jetbrains Rider.&lt;/p&gt;
&lt;p&gt;A &lt;a href="https://cakebuild.net"&gt;Cake&lt;/a&gt; build script has been added to orchestrate the build, test, packaging and deployment of the project. Invoking the Cake build script is most easily done via the bootstrappers, &lt;code&gt;build.ps1&lt;/code&gt; (Windows) or &lt;code&gt;build.sh&lt;/code&gt; (MacOS/Linux), which will fetch the specfied Cake version and the .NET SDK needed to build the project.&lt;/p&gt;
&lt;p&gt;LitJSON now has CI configured on &lt;a href="https://ci.appveyor.com/project/litjson/litjson/branch/develop"&gt;AppVeyor&lt;/a&gt; and &lt;a href="https://travis-ci.org/LitJSON/litjson"&gt;TravisCI&lt;/a&gt;, which means each commit and pull requests now continously builds on Linux, MacOS and Windows.&lt;/p&gt;
&lt;p&gt;We now automatically deploy each commit to &lt;a href="https://www.myget.org/gallery/litjson"&gt;MyGet&lt;/a&gt;, so you if needed you can use pre-release versions, and we're now also deploying each release to &lt;a href="https://www.nuget.org/packages/LitJson"&gt;NuGet&lt;/a&gt;.&lt;/p&gt;
</content:encoded>
		</item>
		<item>
			<title>New organization and web site</title>
			<link>https://litjson.net/blog/2017/12/new-org-and-site</link>
			<description>&lt;p&gt;After the project's been a bit dormant for a while we're now happy to announce that &lt;a href="https://github.com/LitJSON/litjson"&gt;LitJSON&lt;/a&gt; has now moved to it's own &lt;a href="https://github.com/litjson"&gt;LitJSON&lt;/a&gt; GitHub organization.&lt;/p&gt;</description>
			<author>devlead</author>
			<guid>https://litjson.net/blog/2017/12/new-org-and-site</guid>
			<pubDate>Thu, 28 Dec 2017 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;After the project's been a bit dormant for a while we're now happy to announce that &lt;a href="https://github.com/LitJSON/litjson"&gt;LitJSON&lt;/a&gt; has now moved to it's own &lt;a href="https://github.com/litjson"&gt;LitJSON&lt;/a&gt; GitHub organization.&lt;/p&gt;
&lt;p&gt;Together with the new organization we're now launching this new site ( &lt;a href="https://litjson.net"&gt;litjson.net&lt;/a&gt; ), which will host our &lt;a href="/docs"&gt;documentation&lt;/a&gt;, &lt;a href="/api"&gt;API reference&lt;/a&gt; and &lt;a href="/blog"&gt;blog posts&lt;/a&gt;. A &lt;a href="https://twitter.com/litjsonnet"&gt;litjsonnet&lt;/a&gt; Twitter account, with the intention to post any announcements there too.&lt;/p&gt;
&lt;p&gt;For community discussions we've added a &lt;a href="https://gitter.im/LitJSON/lobby"&gt;LitJSON/lobby&lt;/a&gt; Gitter channel, which i great for questions and real-time discussions.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/devlead"&gt;Mattias Karlsson&lt;/a&gt; as been added as a maintainer to the project and he'll try to triage pull request and issues so we in the near future can get out a new release with some long awaited bug fixes.&lt;/p&gt;
&lt;p&gt;Post that we're planning to focus on a release to add support for .NET Standard so LitJSON can be easily consumable from i.e. .NET Core and UWP too.&lt;/p&gt;
&lt;p&gt;And at the same time we'll be adding cross platform continuous integration and support for continuous deployment of releases to NuGet.org and each commit to MyGet.org.&lt;/p&gt;
</content:encoded>
		</item>
	</channel>
</rss>