<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
	<channel>
		<title>LitJSON</title>
		<link>https://litjson.net/</link>
		<description />
		<copyright>2022</copyright>
		<pubDate>Sun, 27 Mar 2022 21:22:17 GMT</pubDate>
		<lastBuildDate>Sun, 27 Mar 2022 21:22:17 GMT</lastBuildDate>
		<item>
			<title>Litjson 0.18.0 released</title>
			<link>https://litjson.net/blog/2022/03/litjson-v0.18.0-released</link>
			<description>&lt;p&gt;Version 0.18.0 of LitJSON has been released.&lt;/p&gt;</description>
			<author>devlead</author>
			<guid>https://litjson.net/blog/2022/03/litjson-v0.18.0-released</guid>
			<pubDate>Sun, 27 Mar 2022 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Version 0.18.0 of LitJSON has been released.&lt;/p&gt;
&lt;p&gt;This version is built using .NET 6 SDK and adds .NET 6 &amp;amp; .NET Standard 2.1 framework monikers.&lt;/p&gt;
&lt;p&gt;Contributions were included from:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/devlead"&gt;devlead&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
		</item>
		<item>
			<title>Litjson 0.17.0 released</title>
			<link>https://litjson.net/blog/2021/01/litjson-v0.17.0-released</link>
			<description>&lt;p&gt;Version 0.17.0 of LitJSON has been released.&lt;/p&gt;
&lt;p&gt;In this version we've got a bug fix for issues with byte/short enum serialization.&lt;/p&gt;
&lt;p&gt;Contributions were included from:&lt;/p&gt;

&lt;p&gt;Full details of everything that was included in this release can be seen below.&lt;/p&gt;</description>
			<author>devlead</author>
			<guid>https://litjson.net/blog/2021/01/litjson-v0.17.0-released</guid>
			<pubDate>Thu, 21 Jan 2021 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Version 0.17.0 of LitJSON has been released.&lt;/p&gt;
&lt;p&gt;In this version we've got a bug fix for issues with byte/short enum serialization.&lt;/p&gt;
&lt;p&gt;Contributions were included from:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kdw9502"&gt;kdw9502&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Full details of everything that was included in this release can be seen below.&lt;/p&gt;
&lt;!--excerpt--&gt;
&lt;h3 id="issues"&gt;Issues&lt;/h3&gt;
&lt;p&gt;As part of this release we had &lt;a href="https://github.com/LitJSON/litjson/milestone/1?closed=1"&gt;1 issues&lt;/a&gt; closed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;bug&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/LitJSON/litjson/pull/124"&gt;&lt;strong&gt;#124&lt;/strong&gt;&lt;/a&gt; Fix byte,short underlying Enum Write issue&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
		</item>
		<item>
			<title>Litjson 0.16.0 released</title>
			<link>https://litjson.net/blog/2020/01/litjson-0.16.0-released</link>
			<description>&lt;p&gt;Version 0.16.0 of LitJSON has been released.&lt;/p&gt;
&lt;p&gt;In this version we've got a bug fix around empty array handling and improved float support.&lt;/p&gt;
&lt;p&gt;Contributions were included from:&lt;/p&gt;

&lt;p&gt;Full details of everything that was included in this release can be seen below.&lt;/p&gt;</description>
			<author>devlead</author>
			<guid>https://litjson.net/blog/2020/01/litjson-0.16.0-released</guid>
			<pubDate>Wed, 22 Jan 2020 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Version 0.16.0 of LitJSON has been released.&lt;/p&gt;
&lt;p&gt;In this version we've got a bug fix around empty array handling and improved float support.&lt;/p&gt;
&lt;p&gt;Contributions were included from:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kdw9502"&gt;kdw9502&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/summitn"&gt;summitn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devlead"&gt;devlead&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Full details of everything that was included in this release can be seen below.&lt;/p&gt;
&lt;!--excerpt--&gt;
&lt;h3 id="issues"&gt;Issues&lt;/h3&gt;
&lt;p&gt;As part of this release we had &lt;a href="https://github.com/LitJSON/litjson/milestone/1?closed=1"&gt;3 issues&lt;/a&gt; closed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;enhancement&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/LitJSON/litjson/pull/112"&gt;&lt;strong&gt;#112&lt;/strong&gt;&lt;/a&gt; Support for float.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;bug&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/LitJSON/litjson/issues/98"&gt;&lt;strong&gt;#98&lt;/strong&gt;&lt;/a&gt; LitJson doesnt write empty arrays.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/LitJSON/litjson/issues/38"&gt;&lt;strong&gt;#38&lt;/strong&gt;&lt;/a&gt; In version 0.9.0 empty arrays are still handled incorrectly.&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
		</item>
		<item>
			<title>LitJSON v0.15.0 released</title>
			<link>https://litjson.net/blog/2019/10/litjson-v0.15.0-released</link>
			<description>&lt;p&gt;Version v0.15.0 of LitJSON has been released.&lt;/p&gt;</description>
			<author>devlead</author>
			<guid>https://litjson.net/blog/2019/10/litjson-v0.15.0-released</guid>
			<pubDate>Mon, 21 Oct 2019 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Version v0.15.0 of LitJSON has been released.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Changes in  this release&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fixed issue with serializing non string dictionary key ( &lt;a href="https://github.com/LitJSON/litjson/issues/104"&gt;#104&lt;/a&gt; )&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;This release's contributors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/grantfar"&gt;grantfar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
		</item>
		<item>
			<title>LitJSON v0.14.0 released</title>
			<link>https://litjson.net/blog/2019/09/litjson-v0.14.0-released</link>
			<description>&lt;p&gt;Version v0.14.0 of LitJSON has been released.&lt;/p&gt;</description>
			<author>devlead</author>
			<guid>https://litjson.net/blog/2019/09/litjson-v0.14.0-released</guid>
			<pubDate>Wed, 18 Sep 2019 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Version v0.14.0 of LitJSON has been released.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Changes in  this release&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fixed package license warning (use license expression)&lt;/li&gt;
&lt;li&gt;Fixed DateTimeOffset support.&lt;/li&gt;
&lt;li&gt;Added the ability to remove elements from JsonData objects as well as JsonData arrays.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;This release's contributors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kenykhung"&gt;kenykhung&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hogiyogi597"&gt;hogiyogi597&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devlead"&gt;devlead&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
		</item>
		<item>
			<title>LitJSON v0.13.0 released</title>
			<link>https://litjson.net/blog/2018/05/litjson-v0.13.0-released</link>
			<description>&lt;p&gt;Version v0.13.0 of LitJSON has been released.&lt;/p&gt;</description>
			<author>devlead</author>
			<guid>https://litjson.net/blog/2018/05/litjson-v0.13.0-released</guid>
			<pubDate>Wed, 09 May 2018 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Version v0.13.0 of LitJSON has been released.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Changes in  this release&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added support for DateTimeOffset&lt;/li&gt;
&lt;li&gt;Added method to check existence of key in JsonData&lt;/li&gt;
&lt;li&gt;Fixed long / int cast issue&lt;/li&gt;
&lt;li&gt;Fixed SourceLink line ending issues&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;This release's contributors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/blubbfish"&gt;blubbfish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devlead"&gt;devlead&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
		</item>
		<item>
			<title>LitJSON v0.12.0 released</title>
			<link>https://litjson.net/blog/2018/01/litjson-v0.12.0-released</link>
			<description>&lt;p&gt;Version v0.12.0 of LitJSON has been released.&lt;/p&gt;</description>
			<author>devlead</author>
			<guid>https://litjson.net/blog/2018/01/litjson-v0.12.0-released</guid>
			<pubDate>Wed, 24 Jan 2018 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Version v0.12.0 of LitJSON has been released.&lt;/p&gt;
&lt;p&gt;This is a minor release of LitJSON, which based on community feedback and contribution, adds back support for .NET Framework version 2.0.&lt;/p&gt;
&lt;p&gt;This means we now with the pre-built binaries available on NuGet support:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.NET Standard 2.0&lt;/li&gt;
&lt;li&gt;.NET Standard 1.5&lt;/li&gt;
&lt;li&gt;.NET Framework 4.5 and above&lt;/li&gt;
&lt;li&gt;.NET Framework 4.0&lt;/li&gt;
&lt;li&gt;.NET Framework 3.5 (including SQLCLR)&lt;/li&gt;
&lt;li&gt;.NET Framework 2.0&lt;/li&gt;
&lt;li&gt;Mono 4.4.2 and above&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Changes in  this release&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added  .NET 2.0 target&lt;/li&gt;
&lt;li&gt;Updated build to Cake 0.25.0&lt;/li&gt;
&lt;li&gt;Updated to .NET Core SDK 2.1.4&lt;/li&gt;
&lt;li&gt;Updated PowerShell boostrapper to support PowerShell Core and non Windows Platforms&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;This release's contributors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/immitev"&gt;immitev&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devlead"&gt;devlead&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
		</item>
		<item>
			<title>LitJSON v0.11.0 released</title>
			<link>https://litjson.net/blog/2018/01/litjson-v0.11.0-released</link>
			<description>&lt;p&gt;Version v0.11.0 of LitJSON has been released.&lt;/p&gt;</description>
			<author>devlead</author>
			<guid>https://litjson.net/blog/2018/01/litjson-v0.11.0-released</guid>
			<pubDate>Mon, 08 Jan 2018 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Version v0.11.0 of LitJSON has been released.&lt;/p&gt;
&lt;p&gt;This is a minor release to address NuGet compatibility with Unity, which currently supports max .NET 3.5.&lt;/p&gt;
&lt;p&gt;We've also added SourceLink for portable PDBs, and source code to symbols NuGet package, to simplify debugging - by linking symbols to GitHub commit.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Changes in  this release&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Added .NET 3.5 target&lt;/li&gt;
&lt;li&gt;Added .NET 4.0 target&lt;/li&gt;
&lt;li&gt;Added source link&lt;/li&gt;
&lt;li&gt;Added source to symbols package&lt;/li&gt;
&lt;li&gt;Added NuGet package description&lt;/li&gt;
&lt;li&gt;Added Use CLRF based on environment&lt;/li&gt;
&lt;li&gt;Added CLRF fix for AppVeyor&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;This release's contributors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/devlead"&gt;devlead&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
		</item>
		<item>
			<title>LitJSON v0.10.0 released</title>
			<link>https://litjson.net/blog/2018/01/litjson-v0.10.0-released</link>
			<description>&lt;p&gt;Version v0.10.0 of LitJSON has been released.&lt;/p&gt;</description>
			<author>devlead</author>
			<guid>https://litjson.net/blog/2018/01/litjson-v0.10.0-released</guid>
			<pubDate>Thu, 04 Jan 2018 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Version v0.10.0 of LitJSON has been released.&lt;/p&gt;
&lt;p&gt;This is the first release under the new LitJSON organization, it includes a few new major improvements and a couple of bug fixes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;LitJSON has now been ported to .NET Core, which means it's now targets&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;.NET Standard 2.0&lt;/li&gt;
&lt;li&gt;.NET Standard 1.5&lt;/li&gt;
&lt;li&gt;.NET Framework 4.5&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Which makes it available to most of the .NET runtimes out there, please raise an issue/pullrequest if you are missing any target.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://litjson.net/api/LitJson/JsonWriter"&gt;JsonWriter&lt;/a&gt; now has the &lt;a href="https://litjson.net/api/LitJson/JsonWriter/B6391FAB"&gt;LowerCaseProperties&lt;/a&gt; property which forces all properties to be outputted in lowercase.&lt;/p&gt;
&lt;p&gt;The code base is now compatible and compilable under SQLCLR, which makes it an option for handling JSON with your CLR procedures and functions in SQL Server 2012 and up.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bugfixes&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Long/Int64 are now handled more robustly and can be upcast from an int.&lt;/p&gt;
&lt;p&gt;Numbers are now handled in a culture invariant way, which means things will work the same regardless of culture on the clients maachine.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This release's contributors&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/devlead"&gt;devlead&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ikasoumen4"&gt;ikasoumen4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/zhenlinyang"&gt;zhenlinyang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A big thanks to all LitJSON contributors and users, it wouldn't have been possible without you!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Housekeeping&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There's been plenty of yak shaving before this release, to improve quality and simplify contribution to the project.&lt;/p&gt;
&lt;p&gt;The project is now compiling multitargeted using .NET Core CLI, unit tests have migrated to work with newer versions of NUnit and the .NET CLI. This aslo means there's now an MSBuild solution and project files, so you can open and compile the project in Visual Studio, Visual Studio for Mac, VSCode and Jetbrains Rider.&lt;/p&gt;
&lt;p&gt;A &lt;a href="https://cakebuild.net"&gt;Cake&lt;/a&gt; build script has been added to orchestrate the build, test, packaging and deployment of the project. Invoking the Cake build script is most easily done via the bootstrappers, &lt;code&gt;build.ps1&lt;/code&gt; (Windows) or &lt;code&gt;build.sh&lt;/code&gt; (MacOS/Linux), which will fetch the specfied Cake version and the .NET SDK needed to build the project.&lt;/p&gt;
&lt;p&gt;LitJSON now has CI configured on &lt;a href="https://ci.appveyor.com/project/litjson/litjson/branch/develop"&gt;AppVeyor&lt;/a&gt; and &lt;a href="https://travis-ci.org/LitJSON/litjson"&gt;TravisCI&lt;/a&gt;, which means each commit and pull requests now continously builds on Linux, MacOS and Windows.&lt;/p&gt;
&lt;p&gt;We now automatically deploy each commit to &lt;a href="https://www.myget.org/gallery/litjson"&gt;MyGet&lt;/a&gt;, so you if needed you can use pre-release versions, and we're now also deploying each release to &lt;a href="https://www.nuget.org/packages/LitJson"&gt;NuGet&lt;/a&gt;.&lt;/p&gt;
</content:encoded>
		</item>
		<item>
			<title>New organization and web site</title>
			<link>https://litjson.net/blog/2017/12/new-org-and-site</link>
			<description>&lt;p&gt;After the project's been a bit dormant for a while we're now happy to announce that &lt;a href="https://github.com/LitJSON/litjson"&gt;LitJSON&lt;/a&gt; has now moved to it's own &lt;a href="https://github.com/litjson"&gt;LitJSON&lt;/a&gt; GitHub organization.&lt;/p&gt;</description>
			<author>devlead</author>
			<guid>https://litjson.net/blog/2017/12/new-org-and-site</guid>
			<pubDate>Thu, 28 Dec 2017 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;After the project's been a bit dormant for a while we're now happy to announce that &lt;a href="https://github.com/LitJSON/litjson"&gt;LitJSON&lt;/a&gt; has now moved to it's own &lt;a href="https://github.com/litjson"&gt;LitJSON&lt;/a&gt; GitHub organization.&lt;/p&gt;
&lt;p&gt;Together with the new organization we're now launching this new site ( &lt;a href="https://litjson.net"&gt;litjson.net&lt;/a&gt; ), which will host our &lt;a href="/docs"&gt;documentation&lt;/a&gt;, &lt;a href="/api"&gt;API reference&lt;/a&gt; and &lt;a href="/blog"&gt;blog posts&lt;/a&gt;. A &lt;a href="https://twitter.com/litjsonnet"&gt;litjsonnet&lt;/a&gt; Twitter account, with the intention to post any announcements there too.&lt;/p&gt;
&lt;p&gt;For community discussions we've added a &lt;a href="https://gitter.im/LitJSON/lobby"&gt;LitJSON/lobby&lt;/a&gt; Gitter channel, which i great for questions and real-time discussions.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/devlead"&gt;Mattias Karlsson&lt;/a&gt; as been added as a maintainer to the project and he'll try to triage pull request and issues so we in the near future can get out a new release with some long awaited bug fixes.&lt;/p&gt;
&lt;p&gt;Post that we're planning to focus on a release to add support for .NET Standard so LitJSON can be easily consumable from i.e. .NET Core and UWP too.&lt;/p&gt;
&lt;p&gt;And at the same time we'll be adding cross platform continuous integration and support for continuous deployment of releases to NuGet.org and each commit to MyGet.org.&lt;/p&gt;
</content:encoded>
		</item>
		<item>
			<title>LitJSON v0.9.0 released</title>
			<link>https://litjson.net/blog/2014/09/litjson-v0.9.0-released</link>
			<description>&lt;p&gt;Version v0.9.0 of LitJSON has been released.&lt;/p&gt;</description>
			<author>lbv</author>
			<guid>https://litjson.net/blog/2014/09/litjson-v0.9.0-released</guid>
			<pubDate>Mon, 08 Sep 2014 00:00:00 GMT</pubDate>
			<content:encoded>&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Version v0.9.0 of LitJSON has been released.&lt;/p&gt;
&lt;h2 id="additions"&gt;Additions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Added &lt;code&gt;&lt;a href="/api/LitJson/JsonData/A64A1513"&gt;JsonData.Keys&lt;/a&gt;&lt;/code&gt; property, with type &lt;code&gt;ICollection&amp;lt;string&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="bug-fixes"&gt;Bug fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Handle nullable types (Issue #3)&lt;/li&gt;
&lt;li&gt;Parse UInt64 numbers correctly&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="other-changes"&gt;Other changes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Allow specifying a custom PKG_CONFIG in build/make.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="contributors-for-this-release"&gt;Contributors for this release&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/michaelbartnett"&gt;Michael Bartnett&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MickeyKim"&gt;MickeyKim&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;&lt;/html&gt;</content:encoded>
		</item>
		<item>
			<title>LitJSON v0.7.0 released</title>
			<link>https://litjson.net/blog/2013/04/litjson-v0.7.0-released</link>
			<description>&lt;p&gt;Version v0.7.0 of LitJSON has been released.&lt;/p&gt;</description>
			<author>lbv</author>
			<guid>https://litjson.net/blog/2013/04/litjson-v0.7.0-released</guid>
			<pubDate>Fri, 26 Apr 2013 00:00:00 GMT</pubDate>
			<content:encoded>&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;Version v0.7.0 of LitJSON has been released.&lt;/p&gt;
&lt;p&gt;General changes and improvements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Simplified the building mechanism. Dropped the entire autotools
infrastructure, and instead added a single Makefile to compile the project
and run the tests with &lt;em&gt;GNU make&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Added &lt;code&gt;SkipNonMembers&lt;/code&gt; property to &lt;code&gt;&lt;a href="/api/LitJson/JsonReader"&gt;JsonReader&lt;/a&gt;&lt;/code&gt;. When active, it allows to
parse JSON data using &lt;code&gt;JsonMapper.ToObject&amp;lt;T&amp;gt;&lt;/code&gt; and ignore any properties
not available in the type &lt;code&gt;T&lt;/code&gt;. Its default value is &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Started moving the documentation into Markdown format.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Added a new section to the QuickStart Guide, regarding customisation of
the library's behaviour.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bug fixes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Convert &lt;code&gt;null&lt;/code&gt; properties properly in &lt;code&gt;JsonData.ToJson&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Read nested arrays in &lt;code&gt;JsonMapper.ToObject&lt;/code&gt; and &lt;code&gt;JsonMapper.ToObject&amp;lt;T&amp;gt;&lt;/code&gt;
correctly.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Contributors for this release:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/whoo24"&gt;whoo24&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Christopher Dummy&lt;/li&gt;
&lt;/ul&gt;
&lt;/body&gt;&lt;/html&gt;</content:encoded>
		</item>
		<item>
			<title>LitJSON v0.5.0 released</title>
			<link>https://litjson.net/blog/2007/10/litjson-v0.5.0-released</link>
			<description>&lt;p&gt;Version v0.5.0 of LitJSON has been released.&lt;/p&gt;</description>
			<author>lbv</author>
			<guid>https://litjson.net/blog/2007/10/litjson-v0.5.0-released</guid>
			<pubDate>Thu, 04 Oct 2007 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Version v0.5.0 of LitJSON has been released.&lt;/p&gt;
&lt;p&gt;New features and improvements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The JsonRader class now has two properties to control the reading of data
from an input stream: EndOfInput and EndOfJson. The latter becomes
true whenever a complete piece of JSON text has been read, while the
former is a flag that becomes true when the stream itself reaches the end.
This way, reading multiple JSON texts from the same input stream is
straightforward.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Added new base importers in JsonMapper for reading numeric values
correctly into float and double members.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now Enum's can be imported/exported as numeric values.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JsonData implements the IEquatable&lt;T&gt; interface now.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;API changes:&lt;/p&gt;
&lt;p&gt;The following types are new:
enum JsonType&lt;/p&gt;
&lt;p&gt;The following methods are new:
IJsonWrapper.GetJsonType()
IJsonWrapper.SetJsonType()&lt;/p&gt;
&lt;p&gt;The following properties are new:
JsonReader.EndOfInput&lt;/p&gt;
&lt;p&gt;Bug fixes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Correctly import/export properties that are read-only or write-only.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Correctly convert null values when adding them as array elements or
properties to a JsonData instance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fixed conversion of empty JSON objects and arrays.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thanks to all the contributors that reported problems and suggested fixes
for this release:
Colin Alworth
Ralf Callenberg
andi&lt;/p&gt;
</content:encoded>
		</item>
		<item>
			<title>LitJSON v0.3.0 released</title>
			<link>https://litjson.net/blog/2007/08/litjson-v0.3.0-released</link>
			<description>&lt;p&gt;Version v0.3.0 of LitJSON has been released.&lt;/p&gt;</description>
			<author>lbv</author>
			<guid>https://litjson.net/blog/2007/08/litjson-v0.3.0-released</guid>
			<pubDate>Wed, 15 Aug 2007 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Version v0.3.0 of LitJSON has been released.&lt;/p&gt;
&lt;p&gt;New features and improvements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Exporters and importers.
Custom conversions using the JsonMapper class can be made through
importers and exporters. These are delegates that tell the library how to
perform conversions between non-basic types (i.e. not string, int, long,
double or boolean) and JSON. There are base and custom
exporters/importers. The base exporters and importers are built-in
delegates that currently handle simple conversions between JSON and the
following value types:&lt;/p&gt;
&lt;p&gt;byte
char
DateTime
decimal
sbyte
short
ushort
uint
ulong&lt;/p&gt;
&lt;p&gt;Custom exporters and importers can be defined through
JsonMapper.RegisterExporter and JsonMapper.RegisterImporter, and they
override the built-in conversions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Improved performance of JsonMapper.ToJson()
A static JsonWriter is re-used to reduce the activity in the heap,
improving performance for multiple conversions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Allowing extended grammar
The lexer can now accept single-quoted strings, and comments in the
following forms:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;    // Single-line comment

    /*
     * Multi-line comment
     */
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This way, certain forms of input coming from JavaScript that don't
necessarily conform to the strict JSON grammar are allowed and succesfully
parsed.&lt;/p&gt;
&lt;p&gt;A JsonReader can be configured to accept only the strict grammar or the
extended one. These extensions are allowed by default.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;API cleanups and additions.
The following members are new:&lt;/p&gt;
&lt;p&gt;JsonData.Count
JsonMapper.RegisterExporter()
JsonMapper.RegisterImporter()
JsonMapper.UnregisterExporters()
JsonMapper.UnregisterImporters()
JsonReader.AllowComments
JsonReader.AllowSingleQuotedStrings
JsonWriter.Reset()&lt;/p&gt;
&lt;p&gt;The following overloads have been added:&lt;/p&gt;
&lt;p&gt;JsonMapper.ToJson(object obj, JsonWriter writer)
JsonMapper.ToObject(JsonReader reader)&lt;/p&gt;
&lt;p&gt;The following members have been renamed:&lt;/p&gt;
&lt;p&gt;JsonReader.HasReachedEnd is now JsonReader.EndOfJson&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bugs fixed:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JsonMapper.ToJson() avoids entering an infinite recursion by defining a
max nesting depth.&lt;/li&gt;
&lt;li&gt;The JsonData int indexer now behaves correctly both when it acts as an
array and as an object.&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
		</item>
		<item>
			<title>LitJSON v0.1.0 released</title>
			<link>https://litjson.net/blog/2007/08/first-release</link>
			<description>&lt;p&gt;Version v0.1.0 of LitJSON has been released.&lt;/p&gt;</description>
			<author>lbv</author>
			<guid>https://litjson.net/blog/2007/08/first-release</guid>
			<pubDate>Thu, 09 Aug 2007 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Version v0.1.0 of LitJSON has been released.&lt;/p&gt;
&lt;p&gt;The first release of LitJSON, a new xplat .NET JSON serializer has been born.&lt;/p&gt;
</content:encoded>
		</item>
	</channel>
</rss>